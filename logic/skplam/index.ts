
/* Autogenerated file, do not edit! */

/* eslint-disable */

import { Noir, InputMap, CompiledCircuit, ForeignCallHandler } from "@noir-lang/noir_js"

export { ForeignCallHandler } from "@noir-lang/noir_js"

export type u8 = string;

export type ActionPreCalcEffect = {
  register: u8[];
}

export type ActionRequirement = {
  register: u8[];
}

export type ActionResultEffect = {
  register: u8[];
}

export type ActionResultEvent = {
  register: u8[];
}

export type FrontendActionDefinition = {
  requirements: FrontendActionDefRequirements;
  pre_calc_effects: FrontendActionDefPreCalcEffects;
  result_effects: FrontendActionDefResultEffects;
  result_events: FrontendActionDefResultEvent[];
}

export type FrontendActionDefRequirements = {
  action_req_target_free_space: boolean;
  action_req_target_is_not_self: boolean;
  action_req_status_visible: boolean;
  action_req_status_invisible: boolean;
  action_req_status_hidden: boolean;
  action_req_min_progress: u8;
  action_req_max_progress: u8;
  action_req_status: u8;
  action_req_max_range: u8;
}

export type FrontendActionDefPreCalcEffects = {
  pre_calc_effect_continues_action: u8;
  pre_calc_effect_is_continuous: boolean;
  pre_calc_effect_interrupts: boolean;
  pre_calc_effect_allow_retargeting: boolean;
}

export type FrontendActionDefResultEffects = {
  action_result_required_energy: u8;
  action_result_progress_increment: u8;
  action_result_progress_multiplier: u8;
  action_result_move_to_target: boolean;
  action_result_hide: boolean;
  action_result_reveal: boolean;
}

export type FrontendActionDefResultEvent = {
  result_event_value_fixed_addition: u8;
  result_event_value_scaled_by_progress: u8;
  result_event_coords_idx: u8;
  result_event_type: u8;
  result_event_subtype: u8;
  result_event_radius: u8;
}


export type build_action_def_pre_calc_effectInputType = {
  pre_calc_effect_continues_action: u8;
  pre_calc_effect_is_continuous: u8;
  pre_calc_effect_interrupts: u8;
  pre_calc_effect_allow_retargeting: u8;
}

export type build_action_def_pre_calc_effectReturnType = ActionPreCalcEffect;
export const build_action_def_pre_calc_effect_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"pre_calc_effect_continues_action","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"pre_calc_effect_is_continuous","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"pre_calc_effect_interrupts","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"pre_calc_effect_allow_retargeting","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionPreCalcEffect::ActionPreCalcEffect","fields":[{"name":"register","type":{"kind":"array","length":1,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/81Wy23DMAz1P/4FRVHk0C1Ey46lW3voIDEi37tFB+gO7SQ9tIcu0UEaOxJAKIovoYIQECg/mrT4+AwoDI5WH9ZG78PDirWfLLew0IFFDizWWKLrRMGpmW88ac8uMyCsxRzHpaotMBep9plNfqoXxjK9xxZ7JJGzbduqvlHAYccaOYiOtd2wFSCgE92+EZwr0YpeDrJnElquYOwkV+NsMiWoNeqDZYGf4UbEww0Je14R9ox1NNXNA786IpwXrAg5zT1xmjs4pdUWsIiQh8ITD8UVtEU4QygIOS09cVp611bDYkIeKk88VFfQFuEMoSLktPbEae1dWwySG+VhqpGgvs1lNrYw816G8EL7n/ffr8+33R6FZp1Otvl7fnz9/njBsfVC3t1C3v1C3sOZPHyJx2cuURz/9+wyawqrf+L6833IthLtKytmdJw48sIzz5Hll961cYytHTFT08wLn9f08Q9+sBVdlQ0AAA=="};

export async function build_action_def_pre_calc_effect(pre_calc_effect_continues_action: u8, pre_calc_effect_is_continuous: u8, pre_calc_effect_interrupts: u8, pre_calc_effect_allow_retargeting: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionPreCalcEffect> {
  const program = new Noir(build_action_def_pre_calc_effect_circuit);
  const args: InputMap = { pre_calc_effect_continues_action, pre_calc_effect_is_continuous, pre_calc_effect_interrupts, pre_calc_effect_allow_retargeting };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionPreCalcEffect;
}
export type build_action_def_requirementsInputType = {
  action_req_target_free_space: u8;
  action_req_target_is_not_self: u8;
  action_req_status_visible: u8;
  action_req_status_invisible: u8;
  action_req_status_hidden: u8;
  action_req_min_progress: u8;
  action_req_max_progress: u8;
  action_req_status: u8;
  action_req_max_range: u8;
}

export type build_action_def_requirementsReturnType = ActionRequirement;
export const build_action_def_requirements_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"action_req_target_free_space","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_target_is_not_self","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status_visible","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status_invisible","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status_hidden","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_min_progress","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_max_progress","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_max_range","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionRequirements::ActionRequirement","fields":[{"name":"register","type":{"kind":"array","length":4,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9WZS3LbMAyGIduxnTh+v+T4sej0AKQesbRrFz1I3Mj73qIH6B3ak3SRLHKJHCRhQkwQmdEiBjQWZjSQQYEjfPxFjCwPXm3zfGh77j0fdeuNtXMxzxGrOWJ1R6zhiJ05Yk1HrOWIte1BrWb9N+vVcRZ4ZK5QXUdRtg0yHeobFaS7JFZRvLtOdKLjJL4NkjDMkijZprt0q1IdhZnex2m4t5N1+e5LUQ5dB4c6LwfNOVeXkWlPiGlPXltRjZFDX4hDvwRtMa6h7jMyHQgxHchrK6kzchgKcRiWoC3GNdRDRqYjIaYjcW1p1WDkMBbiMC5BW4xrqMeMTCdCTCeWaSOnK2oeM+Mzxloct8v2TFAWU+tnCAQBTi08GpvBG1A0bqFSiJ8VV7Z/MT0FPqHO+GpUZYqyCdUT5dx6H4GgAOdwKEof5EXZBD5RzoFPlD7ILC53F/YZa16ATMcw80p3YcZNRC8YmV4JMb2C8rtwC6q34S2tXyEQBLiEww1vBfIbHoV47Ia3BD6hrqCaXbgNVRBl9E6Ua+s3CAQFuLbQaMxc1MzdFLco28Alyp96DXyi3EAVurDS54w1c763SdZ8AafZJSVr7sBpbriSNV/C6T7P56Ru/AZl9kbTgMzrrtk38ZsRGjYnk2s0bNb00p6j4fn9n4f//37f3JKhl2uNTR+/L37d/f1Bx3oFeYOCvFFB3qQgb1aQ5xfkfSnI+/pBHv0WaAzZX5Bx+n+zOs4CnL8jM79qwaFRDXRyY/hcNRx53ge/azlfdG0+TmNdxxjOObae3i/W8QRXQf1L3B0AAA=="};

export async function build_action_def_requirements(action_req_target_free_space: u8, action_req_target_is_not_self: u8, action_req_status_visible: u8, action_req_status_invisible: u8, action_req_status_hidden: u8, action_req_min_progress: u8, action_req_max_progress: u8, action_req_status: u8, action_req_max_range: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionRequirement> {
  const program = new Noir(build_action_def_requirements_circuit);
  const args: InputMap = { action_req_target_free_space, action_req_target_is_not_self, action_req_status_visible, action_req_status_invisible, action_req_status_hidden, action_req_min_progress, action_req_max_progress, action_req_status, action_req_max_range };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionRequirement;
}
export type build_action_def_result_effectsInputType = {
  action_result_required_energy: u8;
  action_result_progress_increment: u8;
  action_result_progress_multiplier: u8;
  action_result_move_to_target: u8;
  action_result_hide: u8;
  action_result_reveal: u8;
}

export type build_action_def_result_effectsReturnType = ActionResultEffect;
export const build_action_def_result_effects_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"action_result_required_energy","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_progress_increment","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_progress_multiplier","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_move_to_target","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_hide","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_reveal","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionResultEffect::ActionResultEffect","fields":[{"name":"register","type":{"kind":"array","length":2,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9WYS27CMBCGnQeQBxBeUYWqqqrUA9h5gLNrFz0IiLDvLXqA3qE9SRftopfoQYqprVrGZMNMBCNFE8bx4PnmjxPFIX+W7o57ee7sDk96YYERcywx1xLzLDHfEuvImC//zyWHptbyID09zRhgLmpZLlBuRnUWgfSh2SQFT4+F5B+oMg8RYk4XRVEvs5rlbEWzas1LWpTrBWeclbzcZDzPa17wZbWulrRiRV6zbVnl9XZvLADItZULC+FqpG2K0iGXJ8pI+lgBUQIUA6YoY4IvSofAiTIicKKMCU5zXeDmxoA19wFr1nUk8gbIOgLcRFgfkOkAiemAtP8UdsklbHi00FkMpU8UEAVQDHSNWGIBCS1UHeKJG95mSOCEmpBL2PBo4QHWPCI4N6fIi73hAfaLjQCZjpGYji1MgbXFfUAOEyQOkxa0BdhDNgFkOkViOkXXFqMdQA4zJA6zFrQF2EM2A2SaIjFN0bVFWReQA+QLK2bNvTPtvcjR1epWn9uEHsTzpWNhIq7vGTpJpP96/f54f1lttKH9s1BY+vM4f/58e9LHrhrmzRvmXTfMu2mYd9sw7+7IPP1TpbBQ+kgb19/z6GmWqfwxTn7aI4cWaeexMab67lvmOUd+u4ZvutaM67GBZUzlnEqvr1fV8Quyn08eexYAAA=="};

export async function build_action_def_result_effects(action_result_required_energy: u8, action_result_progress_increment: u8, action_result_progress_multiplier: u8, action_result_move_to_target: u8, action_result_hide: u8, action_result_reveal: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionResultEffect> {
  const program = new Noir(build_action_def_result_effects_circuit);
  const args: InputMap = { action_result_required_energy, action_result_progress_increment, action_result_progress_multiplier, action_result_move_to_target, action_result_hide, action_result_reveal };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionResultEffect;
}
export type build_action_def_result_eventInputType = {
  result_event_value_fixed_addition: u8;
  result_event_value_scaled_by_progress: u8;
  result_event_coords_idx: u8;
  result_event_type: u8;
  result_event_subtype: u8;
  result_event_radius: u8;
}

export type build_action_def_result_eventReturnType = ActionResultEvent;
export const build_action_def_result_event_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"result_event_value_fixed_addition","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_value_scaled_by_progress","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_coords_idx","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_type","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_subtype","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_radius","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionResultEvent::ActionResultEvent","fields":[{"name":"register","type":{"kind":"array","length":5,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9VYS1LDMAxVfv0k/bcsWHEFO5/W2cGCg7Q03XMLDsAd4CQsYMElOAg1WNR1TTeRM41mMnIlV5GeXi1PPfiVxf65UWtv/wRKS+kZNs9i8y22wGILLbZI2UL1Ph9OBXO5VZrVE+7RxWKWdIlic6ZjkSg9MJuUKPB02wAOgKIEDkHM2DLPq1Va8YyvWVpuRMHyYrMUXPBCFNtUZFklcrEqN+WKlTzPKr4ryqza/QhPCGLtVGIDuhpZk6T0oQ2kZLmOxVDpEQKCBJSOjmEbWYCkJqUPZKTcDoGOlCNw01yfFD9+lGfdmseENes8knF74JZHhIcIHxNiOnGE6QSan8IBtG8KT5WeISAI4BROp/AM3E9hHcS6U3gKdESdQTuncARtIGV+RMq50gsEBAk4V6DpNrmpYyRFTcoIqEj5wOdAR8oFNDOF6+ZJ2YtOQzWzesK7cJlT0mXNPbjMAxcccjskxK/fkj7HcLlnmD4L8L8cOQ9knyLNh2u5X/5WJXcl/jEcD+ax0h/Pn2+vT+ut5vq7PV193V0/vr/c6+8FONzq+0rHmp/wtphi/MRNfNaFU4m1dWL4EL/Q8j3vn8++oc/tNe26bWjxYUy8WOj5Yh3f60uThDwUAAA="};

export async function build_action_def_result_event(result_event_value_fixed_addition: u8, result_event_value_scaled_by_progress: u8, result_event_coords_idx: u8, result_event_type: u8, result_event_subtype: u8, result_event_radius: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionResultEvent> {
  const program = new Noir(build_action_def_result_event_circuit);
  const args: InputMap = { result_event_value_fixed_addition, result_event_value_scaled_by_progress, result_event_coords_idx, result_event_type, result_event_subtype, result_event_radius };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionResultEvent;
}
export type build_action_definitionInputType = {
  requirements: ActionRequirement;
  pre_calc_effects: ActionPreCalcEffect;
  result_effects: ActionResultEffect;
  result_events: ActionResultEvent[];
}

export type build_action_definitionReturnType = u8[];
export const build_action_definition_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"requirements","type":{"kind":"struct","path":"actionRequirements::ActionRequirement","fields":[{"name":"register","type":{"kind":"array","length":4,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"private"},{"name":"pre_calc_effects","type":{"kind":"struct","path":"actionPreCalcEffect::ActionPreCalcEffect","fields":[{"name":"register","type":{"kind":"array","length":1,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"private"},{"name":"result_effects","type":{"kind":"struct","path":"actionResultEffect::ActionResultEffect","fields":[{"name":"register","type":{"kind":"array","length":2,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"private"},{"name":"result_events","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"actionResultEvent::ActionResultEvent","fields":[{"name":"register","type":{"kind":"array","length":5,"type":{"kind":"integer","sign":"unsigned","width":8}}}]}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},"error_types":{}},"bytecode":"H4sIAAAAAAAA/9WZ2W7CMBBFCfu+77SF0n2PsxCHvvRXihr+/xPKVYMU0Xnr7cNYsowuUpgjYnvmjpP7GdvDfE8/O4dZSFeM6onmCFpe0AqCVhS0kqCVBa0iaFVBqwlaXdAagtYUtJagtQWtI2hdQesJWl/QBoI2FLSRoI0FbSJoU0GbCdo81bLj+H58pKv7t2EWvGe52TjzJ3H67iYIkshLjG8+XS/e2dANwt3GGmtCG3551vcTG9go3sWRG5vAT8w+jP195tks5jMlzA6R+VwJc57IfKGEuUBkXiphLhKZV0qYS0TmSyXMZSLzWglzhch8pYS5SmS+VsJcIzLfKGGuE5lvlTA3iMx3SpibROZ7JcwtIvODEuY2kflRCXOHyPykhLlLZH5WwtwjMr8oYe4TmV+VMA+IzG9KmIdEZlcJ84jIbJQwj4nMnhLmCZHZV8I8JTIHSphnROZQCfOcyLz5J2Z2jylSEqdVEmesJM4tOc7FSazYm+idoJcAbx1e87FfDW8OXhW8G3gZqO1R66L2Qy2E2gC5MnJH5FLILXDX4u7BWYyzaZ75vVW6Igb0D9FPQ39pmX4HP359mPBr4V/Cz4O/Bb8H/gf8ANTHqBdRP6GeQH6NfBNwyEdwP+O+wvmN8wz7G3sH7yX+823u9/gGvinsB0wgAAA="};

export async function build_action_definition(requirements: ActionRequirement, pre_calc_effects: ActionPreCalcEffect, result_effects: ActionResultEffect, result_events: ActionResultEvent[], foreignCallHandler?: ForeignCallHandler): Promise<u8[]> {
  const program = new Noir(build_action_definition_circuit);
  const args: InputMap = { requirements, pre_calc_effects, result_effects, result_events };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as u8[];
}
export type parse_action_def_requirements_for_frontend_4InputType = {
  action_def: u8[];
}

export type parse_action_def_requirements_for_frontend_4ReturnType = FrontendActionDefinition;
export const parse_action_def_requirements_for_frontend_4_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"action_def","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"FrontendActionDefinition","fields":[{"name":"requirements","type":{"kind":"struct","path":"actionRequirements::FrontendActionDefRequirements","fields":[{"name":"action_req_target_free_space","type":{"kind":"boolean"}},{"name":"action_req_target_is_not_self","type":{"kind":"boolean"}},{"name":"action_req_status_visible","type":{"kind":"boolean"}},{"name":"action_req_status_invisible","type":{"kind":"boolean"}},{"name":"action_req_status_hidden","type":{"kind":"boolean"}},{"name":"action_req_min_progress","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_req_max_progress","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_req_status","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_req_max_range","type":{"kind":"integer","sign":"unsigned","width":8}}]}},{"name":"pre_calc_effects","type":{"kind":"struct","path":"actionPreCalcEffect::FrontendActionDefPreCalcEffects","fields":[{"name":"pre_calc_effect_continues_action","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"pre_calc_effect_is_continuous","type":{"kind":"boolean"}},{"name":"pre_calc_effect_interrupts","type":{"kind":"boolean"}},{"name":"pre_calc_effect_allow_retargeting","type":{"kind":"boolean"}}]}},{"name":"result_effects","type":{"kind":"struct","path":"actionResultEffect::FrontendActionDefResultEffects","fields":[{"name":"action_result_required_energy","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_result_progress_increment","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_result_progress_multiplier","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_result_move_to_target","type":{"kind":"boolean"}},{"name":"action_result_hide","type":{"kind":"boolean"}},{"name":"action_result_reveal","type":{"kind":"boolean"}}]}},{"name":"result_events","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"actionResultEvent::FrontendActionDefResultEvent","fields":[{"name":"result_event_value_fixed_addition","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_value_scaled_by_progress","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_coords_idx","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_type","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_subtype","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_radius","type":{"kind":"integer","sign":"unsigned","width":8}}]}}}]},"visibility":"public"},"error_types":{}},"bytecode":"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"};

export async function parse_action_def_requirements_for_frontend_4(action_def: u8[], foreignCallHandler?: ForeignCallHandler): Promise<FrontendActionDefinition> {
  const program = new Noir(parse_action_def_requirements_for_frontend_4_circuit);
  const args: InputMap = { action_def };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as FrontendActionDefinition;
}
