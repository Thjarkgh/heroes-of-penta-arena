
/* Autogenerated file, do not edit! */

/* eslint-disable */

import { Noir, InputMap, CompiledCircuit, ForeignCallHandler } from "@noir-lang/noir_js"

export { ForeignCallHandler } from "@noir-lang/noir_js"

export type u8 = string;

export type ActionPreCalcEffect = {
  register: u8[];
}

export type ActionRequirement = {
  register: u8[];
}

export type ActionResultEffect = {
  register: u8[];
}

export type ActionResultEvent = {
  register: u8[];
}

export type FrontendActionDefinition = {
  requirements: FrontendActionDefRequirements;
  pre_calc_effects: FrontendActionDefPreCalcEffects;
  result_effects: FrontendActionDefResultEffects;
  result_events: FrontendActionDefResultEvent[];
}

export type FrontendActionDefRequirements = {
  action_req_target_free_space: boolean;
  action_req_target_is_not_self: boolean;
  action_req_status_visible: boolean;
  action_req_status_invisible: boolean;
  action_req_status_hidden: boolean;
  action_req_min_progress: u8;
  action_req_max_progress: u8;
  action_req_status: u8;
  action_req_max_range: u8;
}

export type FrontendActionDefPreCalcEffects = {
  pre_calc_effect_continues_action: u8;
  pre_calc_effect_is_continuous: boolean;
  pre_calc_effect_interrupts: boolean;
  pre_calc_effect_allow_retargeting: boolean;
}

export type FrontendActionDefResultEffects = {
  action_result_required_energy: u8;
  action_result_progress_increment: u8;
  action_result_progress_multiplier: u8;
  action_result_move_to_target: boolean;
  action_result_hide: boolean;
  action_result_reveal: boolean;
}

export type FrontendActionDefResultEvent = {
  result_event_value_fixed_addition: u8;
  result_event_value_scaled_by_progress: u8;
  result_event_coords_idx: u8;
  result_event_type: u8;
  result_event_subtype: u8;
  result_event_radius: u8;
}


export type build_action_def_pre_calc_effectInputType = {
  pre_calc_effect_continues_action: u8;
  pre_calc_effect_is_continuous: u8;
  pre_calc_effect_interrupts: u8;
  pre_calc_effect_allow_retargeting: u8;
}

export type build_action_def_pre_calc_effectReturnType = ActionPreCalcEffect;
export const build_action_def_pre_calc_effect_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"pre_calc_effect_continues_action","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"pre_calc_effect_is_continuous","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"pre_calc_effect_interrupts","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"pre_calc_effect_allow_retargeting","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionPreCalcEffect::ActionPreCalcEffect","fields":[{"name":"register","type":{"kind":"array","length":1,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/81Wy23DMAz1P/4FRVHk0C1Ey46lW3voIDEi37tFB+gO7SQ9tIcu0UEaOxJAKIovoYIQECg/mrT4+AwoDI5WH9ZG78PDirWfLLew0IFFDizWWKLrRMGpmW88ac8uMyCsxRzHpaotMBep9plNfqoXxjK9xxZ7JJGzbduqvlHAYccaOYiOtd2wFSCgE92+EZwr0YpeDrJnElquYOwkV+NsMiWoNeqDZYGf4UbEww0Je14R9ox1NNXNA786IpwXrAg5zT1xmjs4pdUWsIiQh8ITD8UVtEU4QygIOS09cVp611bDYkIeKk88VFfQFuEMoSLktPbEae1dWwySG+VhqpGgvs1lNrYw816G8EL7n/ffr8+33R6FZp1Otvl7fnz9/njBsfVC3t1C3v1C3sOZPHyJx2cuURz/9+wyawqrf+L6833IthLtKytmdJw48sIzz5Hll961cYytHTFT08wLn9f08Q9+sBVdlQ0AAA=="};

export async function build_action_def_pre_calc_effect(pre_calc_effect_continues_action: u8, pre_calc_effect_is_continuous: u8, pre_calc_effect_interrupts: u8, pre_calc_effect_allow_retargeting: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionPreCalcEffect> {
  const program = new Noir(build_action_def_pre_calc_effect_circuit);
  const args: InputMap = { pre_calc_effect_continues_action, pre_calc_effect_is_continuous, pre_calc_effect_interrupts, pre_calc_effect_allow_retargeting };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionPreCalcEffect;
}
export type build_action_def_requirementsInputType = {
  action_req_target_free_space: u8;
  action_req_target_is_not_self: u8;
  action_req_status_visible: u8;
  action_req_status_invisible: u8;
  action_req_status_hidden: u8;
  action_req_min_progress: u8;
  action_req_max_progress: u8;
  action_req_status: u8;
  action_req_max_range: u8;
}

export type build_action_def_requirementsReturnType = ActionRequirement;
export const build_action_def_requirements_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"action_req_target_free_space","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_target_is_not_self","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status_visible","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status_invisible","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status_hidden","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_min_progress","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_max_progress","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_status","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_req_max_range","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionRequirements::ActionRequirement","fields":[{"name":"register","type":{"kind":"array","length":4,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9WZS1LCQBCGO4CAIu9XEFaWW6tm8pBkpwsPImXYewsP4B30JC504SU8iA5Ol11hyEK6U9JVqQ499FT6mz89IXjwY4vv49Kee99H1XpjzVzMc8QqjljVEas5YkeOWN0RazhiTXtQq1h/bb3azwKPzBWqqyjKlkGmQ32ngnSVxCqKV1eJTnScxPdBEoZZEiXLdJUuVaqjMNPrOA3XdrI233UpyqHt4FDl5aA552ozMu0IMe3IayuqMHLoCnHolqAtxjXUXUamPSGmPXltJVVGDn0hDv0StMW4hrrPyHQgxHQgri2taowchkIchiVoi3EN9ZCR6UiI6cgyreV0Rc1jZnzEWIvjctnuCcpibP0EgSDAsYVHYxP4BYrGLVQK8a/iytYb02PgE+qEr0ZVpijrcHiinFrvIxAU4BS2RemDvCjrwCfKKfCJ0geZxeXehX3Gmmcgs2OYeaV3YcYmomeMTM+EmJ5B+btwAw6v4c2tXyAQBDiH7Ya3APmGRyHu2/DmwCfUBRxCw1P6mLFmzkdkyZpP4H82JMmaWweo7X2vs8nI75S55mNSN77uN73R9Evzy8I8yOHreTTspSbXaNis6ak9R8Pz96eP15fHu3sytPmusfHnzezh7fmWjnUK8noFeYOCvFFB3qQgzy/IOy/Iu9iRR/92MYbsT8g4fbWn9rMA52/JzK8asG1UA63cGN5XNUeet+NzJeeLvpuP01jbMYZzDq2n14t1fAFXj5jcRxsAAA=="};

export async function build_action_def_requirements(action_req_target_free_space: u8, action_req_target_is_not_self: u8, action_req_status_visible: u8, action_req_status_invisible: u8, action_req_status_hidden: u8, action_req_min_progress: u8, action_req_max_progress: u8, action_req_status: u8, action_req_max_range: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionRequirement> {
  const program = new Noir(build_action_def_requirements_circuit);
  const args: InputMap = { action_req_target_free_space, action_req_target_is_not_self, action_req_status_visible, action_req_status_invisible, action_req_status_hidden, action_req_min_progress, action_req_max_progress, action_req_status, action_req_max_range };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionRequirement;
}
export type build_action_def_result_effectsInputType = {
  action_result_required_energy: u8;
  action_result_progress_increment: u8;
  action_result_progress_multiplier: u8;
  action_result_move_to_target: u8;
  action_result_hide: u8;
  action_result_reveal: u8;
}

export type build_action_def_result_effectsReturnType = ActionResultEffect;
export const build_action_def_result_effects_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"action_result_required_energy","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_progress_increment","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_progress_multiplier","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_move_to_target","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_hide","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"action_result_reveal","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionResultEffect::ActionResultEffect","fields":[{"name":"register","type":{"kind":"array","length":2,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9WYS27CMBCGnQeQBxBeUYWqqqrUA9h5gLNrFz0IiLDvLXqA3qE9SRftopfoQYqprVrGZMNMBCNFE8bx4PnmjxPFIX+W7o57ee7sDk96YYERcywx1xLzLDHfEuvImC//zyWHptbyID09zRhgLmpZLlBuRnUWgfSh2SQFT4+F5B+oMg8RYk4XRVEvs5rlbEWzas1LWpTrBWeclbzcZDzPa17wZbWulrRiRV6zbVnl9XZvLADItZULC+FqpG2K0iGXJ8pI+lgBUQIUA6YoY4IvSofAiTIicKKMCU5zXeDmxoA19wFr1nUk8gbIOgLcRFgfkOkAiemAtP8UdsklbHi00FkMpU8UEAVQDHSNWGIBCS1UHeKJG95mSOCEmpBL2PBo4QHWPCI4N6fIi73hAfaLjQCZjpGYji1MgbXFfUAOEyQOkxa0BdhDNgFkOkViOkXXFqMdQA4zJA6zFrQF2EM2A2SaIjFN0bVFWReQA+QLK2bNvTPtvcjR1epWn9uEHsTzpWNhIq7vGTpJpP96/f54f1lttKH9s1BY+vM4f/58e9LHrhrmzRvmXTfMu2mYd9sw7+7IPP1TpbBQ+kgb19/z6GmWqfwxTn7aI4cWaeexMab67lvmOUd+u4ZvutaM67GBZUzlnEqvr1fV8Quyn08eexYAAA=="};

export async function build_action_def_result_effects(action_result_required_energy: u8, action_result_progress_increment: u8, action_result_progress_multiplier: u8, action_result_move_to_target: u8, action_result_hide: u8, action_result_reveal: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionResultEffect> {
  const program = new Noir(build_action_def_result_effects_circuit);
  const args: InputMap = { action_result_required_energy, action_result_progress_increment, action_result_progress_multiplier, action_result_move_to_target, action_result_hide, action_result_reveal };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionResultEffect;
}
export type build_action_def_result_eventInputType = {
  result_event_value_fixed_addition: u8;
  result_event_value_scaled_by_progress: u8;
  result_event_coords_idx: u8;
  result_event_type: u8;
  result_event_subtype: u8;
  result_event_radius: u8;
}

export type build_action_def_result_eventReturnType = ActionResultEvent;
export const build_action_def_result_event_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"result_event_value_fixed_addition","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_value_scaled_by_progress","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_coords_idx","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_type","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_subtype","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"result_event_radius","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"actionResultEvent::ActionResultEvent","fields":[{"name":"register","type":{"kind":"array","length":5,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9VYS1LDMAxVfv0k/bcsWHEFO5/W2cGCg7Q03XMLDsAd4CQsYMElOAg1WNR1TTeRM41mMnIlV5GeXi1PPfiVxf65UWtv/wRKS+kZNs9i8y22wGILLbZI2UL1Ph9OBXO5VZrVE+7RxWKWdIlic6ZjkSg9MJuUKPB02wAOgKIEDkHM2DLPq1Va8YyvWVpuRMHyYrMUXPBCFNtUZFklcrEqN+WKlTzPKr4ryqza/QhPCGLtVGIDuhpZk6T0oQ2kZLmOxVDpEQKCBJSOjmEbWYCkJqUPZKTcDoGOlCNw01yfFD9+lGfdmseENes8knF74JZHhIcIHxNiOnGE6QSan8IBtG8KT5WeISAI4BROp/AM3E9hHcS6U3gKdESdQTuncARtIGV+RMq50gsEBAk4V6DpNrmpYyRFTcoIqEj5wOdAR8oFNDOF6+ZJ2YtOQzWzesK7cJlT0mXNPbjMAxcccjskxK/fkj7HcLlnmD4L8L8cOQ9knyLNh2u5X/5WJXcl/jEcD+ax0h/Pn2+vT+ut5vq7PV193V0/vr/c6+8FONzq+0rHmp/wtphi/MRNfNaFU4m1dWL4EL/Q8j3vn8++oc/tNe26bWjxYUy8WOj5Yh3f60uThDwUAAA="};

export async function build_action_def_result_event(result_event_value_fixed_addition: u8, result_event_value_scaled_by_progress: u8, result_event_coords_idx: u8, result_event_type: u8, result_event_subtype: u8, result_event_radius: u8, foreignCallHandler?: ForeignCallHandler): Promise<ActionResultEvent> {
  const program = new Noir(build_action_def_result_event_circuit);
  const args: InputMap = { result_event_value_fixed_addition, result_event_value_scaled_by_progress, result_event_coords_idx, result_event_type, result_event_subtype, result_event_radius };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as ActionResultEvent;
}
export type build_action_definitionInputType = {
  requirements: ActionRequirement;
  pre_calc_effects: ActionPreCalcEffect;
  result_effects: ActionResultEffect;
  result_events: ActionResultEvent[];
}

export type build_action_definitionReturnType = u8[];
export const build_action_definition_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"requirements","type":{"kind":"struct","path":"actionRequirements::ActionRequirement","fields":[{"name":"register","type":{"kind":"array","length":4,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"private"},{"name":"pre_calc_effects","type":{"kind":"struct","path":"actionPreCalcEffect::ActionPreCalcEffect","fields":[{"name":"register","type":{"kind":"array","length":1,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"private"},{"name":"result_effects","type":{"kind":"struct","path":"actionResultEffect::ActionResultEffect","fields":[{"name":"register","type":{"kind":"array","length":2,"type":{"kind":"integer","sign":"unsigned","width":8}}}]},"visibility":"private"},{"name":"result_events","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"actionResultEvent::ActionResultEvent","fields":[{"name":"register","type":{"kind":"array","length":5,"type":{"kind":"integer","sign":"unsigned","width":8}}}]}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},"error_types":{}},"bytecode":"H4sIAAAAAAAA/9WZ2W7CMBBFCfu+77SF0n2PsxCHvvRXihr+/xPKVYMU0Xnr7cNYsowuUpgjYnvmjpP7GdvDfE8/O4dZSFeM6onmCFpe0AqCVhS0kqCVBa0iaFVBqwlaXdAagtYUtJagtQWtI2hdQesJWl/QBoI2FLSRoI0FbSJoU0GbCdo81bLj+H58pKv7t2EWvGe52TjzJ3H67iYIkshLjG8+XS/e2dANwt3GGmtCG3551vcTG9go3sWRG5vAT8w+jP195tks5jMlzA6R+VwJc57IfKGEuUBkXiphLhKZV0qYS0TmSyXMZSLzWglzhch8pYS5SmS+VsJcIzLfKGGuE5lvlTA3iMx3SpibROZ7JcwtIvODEuY2kflRCXOHyPykhLlLZH5WwtwjMr8oYe4TmV+VMA+IzG9KmIdEZlcJ84jIbJQwj4nMnhLmCZHZV8I8JTIHSphnROZQCfOcyLz5J2Z2jylSEqdVEmesJM4tOc7FSazYm+idoJcAbx1e87FfDW8OXhW8G3gZqO1R66L2Qy2E2gC5MnJH5FLILXDX4u7BWYyzaZ75vVW6Igb0D9FPQ39pmX4HP359mPBr4V/Cz4O/Bb8H/gf8ANTHqBdRP6GeQH6NfBNwyEdwP+O+wvmN8wz7G3sH7yX+823u9/gGvinsB0wgAAA="};

export async function build_action_definition(requirements: ActionRequirement, pre_calc_effects: ActionPreCalcEffect, result_effects: ActionResultEffect, result_events: ActionResultEvent[], foreignCallHandler?: ForeignCallHandler): Promise<u8[]> {
  const program = new Noir(build_action_definition_circuit);
  const args: InputMap = { requirements, pre_calc_effects, result_effects, result_events };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as u8[];
}
export type parse_action_def_requirements_for_frontend_4InputType = {
  action_def: u8[];
}

export type parse_action_def_requirements_for_frontend_4ReturnType = FrontendActionDefinition;
export const parse_action_def_requirements_for_frontend_4_circuit: CompiledCircuit = {"abi":{"parameters":[{"name":"action_def","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"struct","path":"FrontendActionDefinition","fields":[{"name":"requirements","type":{"kind":"struct","path":"actionRequirements::FrontendActionDefRequirements","fields":[{"name":"action_req_target_free_space","type":{"kind":"boolean"}},{"name":"action_req_target_is_not_self","type":{"kind":"boolean"}},{"name":"action_req_status_visible","type":{"kind":"boolean"}},{"name":"action_req_status_invisible","type":{"kind":"boolean"}},{"name":"action_req_status_hidden","type":{"kind":"boolean"}},{"name":"action_req_min_progress","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_req_max_progress","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_req_status","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_req_max_range","type":{"kind":"integer","sign":"unsigned","width":8}}]}},{"name":"pre_calc_effects","type":{"kind":"struct","path":"actionPreCalcEffect::FrontendActionDefPreCalcEffects","fields":[{"name":"pre_calc_effect_continues_action","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"pre_calc_effect_is_continuous","type":{"kind":"boolean"}},{"name":"pre_calc_effect_interrupts","type":{"kind":"boolean"}},{"name":"pre_calc_effect_allow_retargeting","type":{"kind":"boolean"}}]}},{"name":"result_effects","type":{"kind":"struct","path":"actionResultEffect::FrontendActionDefResultEffects","fields":[{"name":"action_result_required_energy","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_result_progress_increment","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_result_progress_multiplier","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"action_result_move_to_target","type":{"kind":"boolean"}},{"name":"action_result_hide","type":{"kind":"boolean"}},{"name":"action_result_reveal","type":{"kind":"boolean"}}]}},{"name":"result_events","type":{"kind":"array","length":4,"type":{"kind":"struct","path":"actionResultEvent::FrontendActionDefResultEvent","fields":[{"name":"result_event_value_fixed_addition","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_value_scaled_by_progress","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_coords_idx","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_type","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_subtype","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"result_event_radius","type":{"kind":"integer","sign":"unsigned","width":8}}]}}}]},"visibility":"public"},"error_types":{}},"bytecode":"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"};

export async function parse_action_def_requirements_for_frontend_4(action_def: u8[], foreignCallHandler?: ForeignCallHandler): Promise<FrontendActionDefinition> {
  const program = new Noir(parse_action_def_requirements_for_frontend_4_circuit);
  const args: InputMap = { action_def };
  const { returnValue } = await program.execute(args, foreignCallHandler);
  return returnValue as FrontendActionDefinition;
}
